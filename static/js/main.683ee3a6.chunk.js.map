{"version":3,"sources":["components/FinalResult.js","components/ColorSquare.js","components/Board.js","components/Header.js","components/App.js","index.js"],"names":["FinalResult","props","react_default","a","createElement","className","finalMessage","onClick","restartGame","ColorSquare","onSquareClick","event","_this","setSelectedIndex","target","id","style","border","changeSubmitBtnState","console","log","this","backgroundColor","document","getElementById","concat","Component","Board","state","selectedId","submitBtnDisabled","restartBtnDisabled","finalResultScreen","setState","getSelectedId","querySelectorAll","forEach","squ","onSubmitClick","parseInt","correctColorIndex","window","location","reload","numberOfSquare","compnentsArr","i","push","ColorSquare_ColorSquare","key","colors","FinalResult_FinalResult","Object","defineProperty","createSquare","numberOfSquares","disabled","Header","selectedOption","onOptionChange","value","colorString","onFormSubmit","preventDefault","correctColor","changeGameMode","onSubmit","type","name","onChange","checked","onButtonClick","App","colorTag","gameMode","randomNumber","max","min","Math","floor","random","createColorsArray","colorsArr","getGameMode","mode","winningColor","range","Header_Header","Board_Board","ReactDOM","render","components_App","startApp"],"mappings":"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","file":"static/js/main.683ee3a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../styleSheets/FinalResult.css\"\r\nexport default function FinalResult(props) {\r\n  return (\r\n    <div className = \"final-result\">\r\n        {props.finalMessage}\r\n        <div className = \"restart-id-container\">\r\n        <button className = \"button restart-id\"   onClick = {props.restartGame}>Restart</button>\r\n        </div>\r\n       \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../styleSheets/ColorSquare.css'\r\nexport default class ColorSquare extends Component {\r\n  \r\n  onSquareClick = (event) =>{\r\n    this.props.setSelectedIndex(event.target.id)  \r\n    event.target.style.border = `4px solid black`\r\n    this.props.changeSubmitBtnState(true);\r\n  }\r\n  \r\n  \r\n  componentDidMount(){\r\n    console.log(this.props.backgroundColor)\r\n    document.getElementById(`${this.props.id}`).style.backgroundColor =  this.props.backgroundColor;\r\n    \r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className = \"square\" id = {`${this.props.id}`} onClick = {this.onSquareClick}/>   \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FinalResult from \"./FinalResult\"\r\nimport ColorSquare from './ColorSquare'\r\nimport \"../styleSheets/Board.css\"\r\n\r\n\r\nexport default class Board extends Component {\r\n\r\n    state = { selectedId: null, submitBtnDisabled: true, restartBtnDisabled: true, finalResultScreen: false, finalMessage: ''}\r\n\r\n    changeSubmitBtnState = (state) => {\r\n        state ? this.setState({submitBtnDisabled: false}):this.setState({submitBtnDisabled: true})\r\n    }\r\n    createSquare(numberOfSquare){\r\n        \r\n        const compnentsArr = [];\r\n            for(let i = 0 ; i < numberOfSquare; i++){\r\n                compnentsArr.push(<ColorSquare id = {i} key = {i} backgroundColor = {this.props.colors[i]} setSelectedIndex = {this.getSelectedId} changeSubmitBtnState = {this.changeSubmitBtnState}/>) \r\n            }   \r\n            \r\n            return compnentsArr\r\n    } \r\n   \r\n    getSelectedId = (id) => {\r\n        document.querySelectorAll(\".square\").forEach((squ) => {squ.style.border = \"none\"})\r\n        this.setState({selectedId: id})\r\n      \r\n    }\r\n\r\n\r\n    onSubmitClick = () =>{\r\n       \r\n        if( parseInt(this.props.correctColorIndex) === parseInt(this.state.selectedId)){\r\n            this.setState({ submitBtnDisabled: true, restartBtnDisabled: false,finalResultScreen: true,finalMessage: 'Correct' })\r\n        \r\n         }else{\r\n            this.setState({submitBtnDisabled: true, restartBtnDisabled: false,finalResultScreen: true,finalMessage: 'Incorrect'})\r\n         }\r\n     }\r\n\r\n    restartGame = () =>{\r\n       window.location.reload()\r\n    }\r\n\r\n    render() {\r\n        \r\n        if(this.state.finalResultScreen){\r\n            return(\r\n                <div className = \"board\" style = {{backgroundColor:this.props.colors[this.props.correctColorIndex]}}>\r\n                    <FinalResult finalMessage restartGame = {this.restartGame} finalMessage = {this.state.finalMessage}/>\r\n                    <span className = \"squares\">\r\n                        {this.createSquare(this.props.numberOfSquares)}\r\n                    </span>\r\n                    </div>\r\n            )\r\n        }\r\n        \r\n        return(\r\n            <div className = \"board\">\r\n              {/*   <FinalResult /> */}\r\n                <span className = \"squares\">\r\n                    {this.createSquare(this.props.numberOfSquares)}\r\n                </span>  \r\n                    <div className = \"submit-btn-container\">\r\n                        <button className = \"button submit-btn\" onClick = {this.onSubmitClick} disabled = {this.state.submitBtnDisabled}>Submmit</button>\r\n                    </div>\r\n                   \r\n            </div>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\n ","import React, { Component } from 'react'\r\nimport '../styleSheets/Header.css'\r\nexport default class Header extends Component {\r\n    state   = {selectedOption: 'esay'}\r\n  \r\n    onOptionChange = (event) =>{\r\n        \r\n        console.log('test')\r\n        this.setState({\r\n            selectedOption: event.target.value,\r\n            colorString: ''\r\n        })\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n    onFormSubmit = (event)=>{\r\n        event.preventDefault();\r\n        console.log(this.props.correctColor)\r\n        this.props.changeGameMode(this.state.selectedOption)\r\n        document.getElementById(\"header-btn\").disabled = true;\r\n     \r\n        /* document.querySelector(\".squares\").parentNode.removeChild(document.querySelector(\".squares\")); */\r\n    }\r\n\r\n  \r\n  \r\n    render() {\r\n    return (\r\n      <header className = \"header-main\">\r\n          <div className = \"main-container\">\r\n              <form className = \"main-menu-form\" onSubmit = {this.onFormSubmit}>\r\n               <label> <input className = \"radio-btn\" type = \"radio\" name = \"typeGame\" value = \"esay\" onChange = {this.onOptionChange} checked =           {this.state.selectedOption === 'esay'}/>Esay</label>\r\n                <label><input className = \"radio-btn\" type = \"radio\" name = \"typeGame\" value = \"medium\" onChange = {this.onOptionChange} checked ={this.state.selectedOption === 'medium'}/>Medium</label>\r\n                <label><input className = \"radio-btn\" type = \"radio\" name = \"typeGame\" value = \"hard\" onChange = {this.onOptionChange}  checked ={this.state.selectedOption === 'hard'}/>Hard</label>\r\n                <button className = \"button\" id = \"header-btn\" onClick = {this.onButtonClick}>Go</button>\r\n                \r\n              </form>\r\n              <div className = \"correct-color\">\r\n                {this.props.correctColor}\r\n              </div>\r\n             \r\n      \r\n          </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Board from './Board'\nimport Header from './Header'\nimport \"../styleSheets/App.css\"\nimport ColorSquare from './ColorSquare'\n\n\n\n\n\nclass App extends Component {\n  \n  state = {correctColorIndex : null, colorTag : '', colors: [], gameMode: ''}\n  \n  randomNumber = (max, min) =>(Math.floor(Math.random()*(max - min + 1) + min))\n   \n\n  createColorsArray = (min,max, numberOfSquare) => {\n    const colorsArr = [];\n   \n    for(let i = 0; i < numberOfSquare; i++){\n      colorsArr.push(`rgb(${this.randomNumber(min,max)},${this.randomNumber(min,max)},${this.randomNumber(min,max)})`)\n    }\n    return colorsArr\n  }\n\n\n\n\n  getGameMode = (mode) => {\n    \n    \n    let numberOfSquare = 6;\n    let winningColor;\n    let colorsArr;\n    \n    if(mode === \"esay\"){\n     \n       numberOfSquare = 3;\n       colorsArr = this.createColorsArray(0,255, 3)\n       winningColor = this.randomNumber(0,3);\n    \n    }else if(mode === \"medium\"){\n      \n      colorsArr = this.createColorsArray(0,255,6)\n      winningColor = this.randomNumber(0,6);\n    \n    }else if(mode === \"hard\"){\n       \n       const range = this.randomNumber(25,225)\n       colorsArr = this.createColorsArray((range -25) ,(range + 25),6)\n       winningColor = this.randomNumber(0,6);\n    }\n    \n  \n   \n   \n    this.setState({gameMode: mode, colors: colorsArr, correctColorIndex: winningColor, numberOfSquares: numberOfSquare})\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n    console.log(this.state.colors)\n    return (\n      <div className = \"container\">  \n        <Header changeGameMode = {this.getGameMode}  correctColor = {this.state.colors[this.state.correctColorIndex]} />\n        <Board colors = {this.state.colors} correctColorIndex = {this.state.correctColorIndex} numberOfSquares = {this.state.numberOfSquares} restartGame = {this.props.restartGame}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\n\n    ReactDOM.render(<App restartGame = {startApp}/>, document.getElementById('root'));\n\nconst startApp = () => {\n   \n}\n\n\n"],"sourceRoot":""}